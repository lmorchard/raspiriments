#!/usr/bin/env python
import time
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

S_DS = 23
S_ST = 24
S_SH = 25

for p in (S_DS, S_ST, S_SH):
    GPIO.setup(p, GPIO.OUT, initial=GPIO.LOW)

states = [
    "00000000",
    "00001111",
    "00101111",
    "00001111",
#    (500,),
    #"00000001", "00000001", "00000001", "00000001", "00000001", "00000001", "00000001", 
    #(1500,),
    #"11000000","00110000","00001100","00000011","00001100","00110000","11000000",
    #"11000000","00110000","00001100","00000011","00001100","00110000","11000000",
    #(250,),
    #"10000000","01000000","00100000","00010000","00001000","00000100","00000010", "00000001","00000010","00000100","00001000","00010000","00100000","01000000",
    #"10000000","01000000","00100000","00010000","00001000","00000100","00000010", "00000001","00000010","00000100","00001000","00010000","00100000","01000000",
    #(250,),
    #"10000001","01000010","00100100","00011000","00100100","01000010","10000001",
    #"10000001","01000010","00100100","00011000","00100100","01000010","10000001",
    #"00111111",
]

def set(state):
    GPIO.output(S_ST, 0)
    for bit in state:
        GPIO.output(S_DS, int(bit))
        GPIO.output(S_SH, 1)
        GPIO.output(S_SH, 0)
    GPIO.output(S_ST, 1)

while True:
    for state in states:
        
        if type(state) is not str:
            delay = state[0] / 1000.0
            print "SLEEP %s" % delay
            time.sleep(delay)
            continue
        
        print "STATE %s" % state
        set(state)
        time.sleep(0.05)